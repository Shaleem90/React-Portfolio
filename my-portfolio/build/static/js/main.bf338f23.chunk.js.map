{"version":3,"sources":["components/Navbar/navbar.js","pages/About/about.js","components/Hero/hero.js","components/Card/card.js","pages/Projects/projects.js","pages/Contact/contact.js","App.js","serviceWorker.js","index.js"],"names":["NavbarApp","Navbar","bg","variant","Brand","style","height","src","Nav","className","Link","href","AboutMe","Card","Img","alt","ImgOverlay","Title","Text","Hero","CardProject","Container","CardDeck","Body","Footer","target","MyPortfolio","ContactMe","Jumbotron","App","exact","path","component","About","Projects","Contact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bf338f23.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport { Nav, Navbar} from 'react-bootstrap';\n\n\nconst NavbarApp = () => {\n    return (\n\n        <container>\n\n  <Navbar bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand ><img style={{ height: '5rem' }} src='Group 38.png'></img></Navbar.Brand>\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"About\">About Me</Nav.Link>\n      <Nav.Link href=\"Projects\">Projects</Nav.Link>\n      <Nav.Link href=\"Contact\">Contact</Nav.Link>\n      <Nav.Link href=\"Shaleem_Malik_Resume (1).PDF\">Download Resume</Nav.Link>\n\n    </Nav>\n  </Navbar>\n\n  \n  </container>\n    );\n  }\n  \n  export default NavbarApp;","\nimport React from \"react\";\nimport {Card} from 'react-bootstrap';\n//import \"./style.css\";\n\nconst AboutMe = () => {\n  return (\n\n\n<Card className=\"bg-dark text-white text-center\">\n  <Card.Img src=\"QAP_7362.JPG\" alt=\"Card image\" />\n  <Card.ImgOverlay>\n    <hr></hr>\n    <hr></hr>\n    <hr></hr>\n    <Card.Title><h1>Welcome to My Portfolio</h1></Card.Title>\n    <hr></hr>\n    <Card.Title><h2>About Me</h2></Card.Title>\n    <hr></hr>\n    <Card.Text>\n    <h5>My name is Shaleem Malik and i am based in Los Angeles, California. I am working as a Software Support Specialist in an EMR/HealthCare company with that i am a Certified Full Stack Developer from UCLA. My expertise include but are not limited to HTML, CSS, Bootstrap, Foundation.css, Javascript, Jquery, Web APIs, Node.js, ES6, React.js, Mern, MongoDB, SQL Server Management and MySQL. I am Experienced Team Lead with a demonstrated history of working in the automotive industry. Skilled in Team Motivation, Customer Service, Marketing, Team Building, and Team Management. Strong information technology professional. I have my associates degree in Pre-Engineering, Bachelors in Business Administration, and a Full Stack Web Developer Certification from University of California, Los Angeles (UCLA Extention). My activities involve music and gym. If you would like to know more about me please click on my Portfolio link.</h5>\n    </Card.Text>\n  </Card.ImgOverlay>\n</Card>\n\n\n  )\n} \nexport default AboutMe;","\nimport React from \"react\";\nimport \"./style.css\";\n\nconst Hero = () => {\n  return (\n    <div className=\"hero text-center\">\n      <h1>Shaleem Malik</h1>\n      <hr></hr>\n      <h2>I Turn Coffee Into Code</h2>\n    </div>\n  )\n}\nexport default Hero;","import React from \"react\";\nimport { Card, CardDeck, Container } from 'react-bootstrap';\n//import \"./style.css\";\n\nconst CardProject = () => {\n    return (\n        <Container>\n\n            <CardDeck>\n                <Card style={{ height: '25rem' }} >\n                    <Card.Img style={{ height: '25rem' }} variant=\"top\" src=\"Cleaning Services.jpg\" />\n                    <Card.Body>\n                        <Card.Title className='text-center' >Cleaning Services</Card.Title>\n                    </Card.Body>\n                    <Card.Footer>\n                        <span><a href='http://www.cleansafemaintenance.com/' target=\"_blank\" className='active'>Live Demo</a></span>\n                        <hr></hr>\n                        <span><a href='https://github.com/Shaleem90' target=\"_blank\" className='active'>GitHub Page</a></span>\n                    </Card.Footer>\n                </Card>\n                <Card style={{ height: '25rem' }}>\n                    <Card.Img style={{ height: '25rem' }} variant=\"top\" src=\"ub04.png\" />\n                    <Card.Body>\n                        <Card.Title className='text-center'>Medical Billing from</Card.Title>\n                    </Card.Body>\n                    <Card.Footer>\n                        <span><a href='https://hospicemd-ub04.herokuapp.com/' target=\"_blank\" className='active'>Live Demo</a></span>\n                        <hr></hr>\n                        <span><a href='https://github.com/Shaleem90' target=\"_blank\" className='active'>GitHub Page</a></span>\n                    </Card.Footer>\n                </Card>\n                <Card style={{ height: '25rem' }}>\n                    <Card.Img style={{ height: '25rem' }} variant=\"top\" src=\"HR.jpeg\" />\n                    <Card.Body>\n                        <Card.Title className='text-center'>HR Management</Card.Title>\n                    </Card.Body>\n                    <Card.Footer>\n                        <span><a href='https://vieramal.herokuapp.com/' target=\"_blank\" className='active'>Live Demo</a></span>\n                        <hr></hr>\n                        <span><a href='https://github.com/Shaleem90' target=\"_blank\" className='active'>GitHub Page</a></span>\n                    </Card.Footer>\n                </Card>\n            </CardDeck>\n\n        </Container>\n\n    )\n}\nexport default CardProject;","\nimport React from \"react\";\nimport Hero from '../../components/Hero/hero';\nimport Card from '../../components/Card/card';\n//import \"./style.css\";\n\nconst MyPortfolio = () => {\n  return (\n\n    <div>\n    <div><Hero/></div>\n    \n    <hr></hr>\n\n    <div><Card /></div>\n\n    </div>\n\n  )\n} \nexport default MyPortfolio;","\nimport React from \"react\";\nimport { Jumbotron, Button, Container } from 'react-bootstrap';\nimport Hero from '../../components/Hero/hero'\n//import \"./style.css\";\n\nconst ContactMe = () => {\n    return (\n        <div>\n\n            <div> <Hero /> </div>\n\n\n            <Jumbotron className='text-center'>\n\n                <h2>\n                    Please feel free to contact Me @\n                </h2>\n                <br></br>\n\n                <span><a href='mailto:shaleemmalik6@gmail.com' className='active'>shaleemmalik6@gmail.com</a></span>\n                <hr></hr>\n                <span><a href='callto:5867448939' className='active'>(586)-744-8939</a></span>\n                <hr></hr>\n                <h2>\n                    You can swing by for a cup of coffee aswell\n                </h2>\n                <br></br>\n                <span><a href='#' className='active'>301 s Glendora Avenue, West Covina, CA 91790.</a></span>\n                <p>\n                </p>\n\n            </Jumbotron>\n\n        </div>\n\n\n\n    )\n}\nexport default ContactMe;","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/navbar\";\nimport About from './pages/About/about';\nimport Projects from './pages/Projects/projects';\nimport Contact from './pages/Contact/contact';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n    <div >\n      < Navbar />\n      <Route exact path=\"/\" component={About} />\n      <Route exact path=\"/about\" component={About} />\n      <Route exact path=\"/projects\" component={Projects} />\n      <Route exact path=\"/contact\" component={Contact} />\n  \n    </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}